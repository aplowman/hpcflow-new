name: test

on:
  workflow_dispatch: # manual
  push: # on any branch

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.HPCFLOW_ACTIONS_TOKEN }} # PAT of user who has permission to bypass branch protection

      - run: |
          git config user.name hpcflow-actions
          git config user.email hpcflow-actions@users.noreply.github.com

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: pre-commit
        run: |
          pip install pre-commit
          pre-commit install 
          pre-commit run --all-files

      - name: pre-commit push changes
        run: |
          if git diff --quiet; then
            echo "No pre commit changes"
          else
            git commit -am "[skip ci] pre commit fixes"
            git push
          fi

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-18.04]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure poetry
        run: |
          python -m pip install poetry
          poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        run: | # disable failing tests while we set up CI
          poetry run python -m pytest --verbose --exitfirst -k "not task_schema and not task_template and not resolve_elements and not input_value and not action"
